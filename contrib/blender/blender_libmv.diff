Index: ../../../../source/blender/src/buttons_editing.c
===================================================================
--- ../../../../source/blender/src/buttons_editing.c	(revision 15392)
+++ ../../../../source/blender/src/buttons_editing.c	(working copy)
@@ -74,6 +74,7 @@
 #include "DNA_view3d_types.h"
 #include "DNA_world_types.h"
 #include "DNA_packedFile_types.h"
+#include "DNA_libmv_types.h"
 
 #include "BKE_blender.h"
 #include "BKE_brush.h"
@@ -3582,6 +3583,63 @@
 	uiBlockEndAlign(block);
 }
 
+static void editing_panel_camera_constraints(Camera *cam)
+{
+	uiBlock *block;
+
+	block = uiNewBlock(&curarea->uiblocks, "editing_panel_camera_constraints", UI_EMBOSS, UI_HELV, curarea->win);
+	uiNewPanelTabbed("Tracking", "Editing");
+
+	if(uiNewPanel(curarea, block, "Constraints", "Editing", 0, 0, 320, 204)==0) return;
+	
+}
+
+static void editing_panel_camera_visualization(Camera *cam, libmvConfig *libmv)
+{
+	uiBlock *block;
+
+	block = uiNewBlock(&curarea->uiblocks, "editing_panel_camera_visualization", UI_EMBOSS, UI_HELV, curarea->win);
+	uiNewPanelTabbed("Tracking", "Editing");
+
+	if(uiNewPanel(curarea, block, "Visualization", "Editing", 0, 0, 320, 204)==0) return;
+	
+	//printf("debug: editing_panel_camera_visualization\n");
+	uiDefButS(block, TOG, REDRAWVIEW3D, "Features",  10, 10, 100, 20, &libmv->flag, 0, 0, 0, 0, "Show features as 2D points");
+	uiDefButS(block, TOG, REDRAWVIEW3D, "Tracks",   110, 10, 100, 20, &libmv->flag, 0, 0, 0, 0, "Show feature tracks");
+
+	uiDefButI(block, NUM,REDRAWSEQ,           "Length:",  210, 10, 100, 20, &G.scene->r.sfra,1.0,MAXFRAMEF, 0, 0, "Fade track after X frames ");
+
+	//printf("debug: editing_panel_camera_visualization exit\n");
+
+}
+
+static void editing_panel_camera_tracking(Object *ob, Camera *cam)
+{
+	uiBlock *block;
+
+	block = uiNewBlock(&curarea->uiblocks, "editing_panel_camera_tracking", UI_EMBOSS, UI_HELV, curarea->win);
+
+	if(uiNewPanel(curarea, block, "Tracking", "Editing", 320, 0, 318, 204)==0) return;
+	
+	uiDefButI(block, NUM,REDRAWSEQ,"Start:",  10, 154, 150, 20, &G.scene->r.sfra,1.0,MAXFRAMEF, 0, 0, "Start frame of the tracking sequence (inclusive)");
+	uiDefButI(block, NUM,REDRAWSEQ,"End:", 160, 154, 150, 20, &G.scene->r.efra,SFRA,MAXFRAMEF, 0, 0, "End frame of the tracking sequence (inclusive)");
+
+	uiDefButI(block, NUM,REDRAWSEQ,"Features",  10, 124, 150, 20, &G.scene->r.sfra,1.0,MAXFRAMEF, 0, 0, "Number of features to track");
+	uiDefButI(block, NUM,REDRAWSEQ,"RANSAC",   160, 124, 150, 20, &G.scene->r.efra,SFRA,MAXFRAMEF, 0, 0, "Number of RANSAC rounds in 3point reconstruction");	
+	uiDefIconBut(block, BUT, B_FS_PIC, ICON_FILESEL, 10, 94, 20, 20, 0, 0, 0, 0, 0, "Select the camera calibration file");
+	uiDefBut(block, TEX,0,"",						 31, 94, 279, 20,G.scene->r.pic, 0.0,79.0, 0, 0, "Camera calibration file");
+
+	uiDefButS(block, TOG|BIT|0, REDRAWVIEW3D, "Bundle",    10, 64, 75, 20, &cam->flag, 0, 0, 0, 0, "Bundle adjust subsets after each one is created");
+	uiDefButS(block, TOG|BIT|1, REDRAWVIEW3D, "NView",     85, 64, 75, 20, &cam->flag, 0, 0, 0, 0, "Use nview rather than threeview code for subsets");
+	uiDefButS(block, TOG|BIT|0, REDRAWVIEW3D, "Trim",     160, 64, 75, 20, &cam->flag, 0, 0, 0, 0, "Trim outliers before bundeling");
+	uiDefButS(block, TOG|BIT|1, REDRAWVIEW3D, "Positive", 235, 64, 75, 20, &cam->flag, 0, 0, 0, 0, "Force points te be in front of camera");
+	uiDefButI(block, NUM,REDRAWSEQ,"First:",  10, 44, 150, 20, &G.scene->r.sfra,1.0,MAXFRAMEF, 0, 0, "First subset of the sequence to use (inclusive)");
+	uiDefButI(block, NUM,REDRAWSEQ,"Last:", 160, 44, 150, 20, &G.scene->r.efra,SFRA,MAXFRAMEF, 0, 0, "Last subset of the sequence to use (inclusive)");
+
+	uiDefBut(block, BUT,B_TRACK_FEATURES,"Track",  10, 10, 145, 24, 0, 0, 0, 0, 0, "Start the feature tracking");
+	uiDefBut(block, BUT,B_SOLVE_3D,"Solve", 165, 10, 145, 24, 0, 0, 0, 0, 0, "Start the 3D reconstruction solver");
+}
+
 /* yafray: extra camera panel to set Depth-of-Field parameters */
 static void editing_panel_camera_yafraydof(Object *ob, Camera *cam)
 {
@@ -3622,9 +3680,18 @@
 	cam= ob->data;
 
 	switch(event) {
-	case 0:
-		;
-		break;
+		case B_TRACK_FEATURES:
+			printf("info: starting libmv feature track\n");
+			break;
+
+		case B_SOLVE_3D:
+			printf("info: starting libmv 3D solve\n");
+			break;
+
+		default: 
+			if (G.f & G_DEBUG) {
+				printf("do_cambuts: unhandled event %d\n", event);
+			}
 	}
 }
 
@@ -6497,6 +6564,7 @@
 	Lattice *lt;
 	bArmature *arm;
 	Camera *cam;
+	libmvConfig *libmv;
 
 	ob= OBACT;
 	if(ob==NULL) return;
@@ -6593,6 +6661,9 @@
 		cam= ob->data;
 		editing_panel_links(ob); // no editmode!
 		editing_panel_camera_type(ob, cam);
+		editing_panel_camera_tracking(ob, cam);
+		editing_panel_camera_constraints(cam);
+		editing_panel_camera_visualization(cam, libmv);
 		/* yafray: extra panel for dof parameters */
 		if (G.scene->r.renderer==R_YAFRAY) editing_panel_camera_yafraydof(ob, cam);
 		break;
Index: ../../../../source/blender/include/butspace.h
===================================================================
--- ../../../../source/blender/include/butspace.h	(revision 15392)
+++ ../../../../source/blender/include/butspace.h	(working copy)
@@ -546,6 +546,8 @@
 
 /* *********************** */
 #define B_CAMBUTS		2500
+#define B_TRACK_FEATURES	2401	//feature tracking algorithm
+#define B_SOLVE_3D			2402	//start 3D solver
 
 /* *********************** */
 #define B_MBALLBUTS		2600
Index: ../../../../source/blender/makesdna/DNA_libmv_types.h
===================================================================
--- ../../../../source/blender/makesdna/DNA_libmv_types.h	(revision 0)
+++ ../../../../source/blender/makesdna/DNA_libmv_types.h	(revision 0)
@@ -0,0 +1,43 @@
+/**
+ * makesdna/DNA_libmv_types.h (jun-2008 db)
+ *
+ * ***** BEGIN GPL LICENSE BLOCK *****
+ *
+ * This program is free software; you can redistribute it and/or
+ * modify it under the terms of the GNU General Public License
+ * as published by the Free Software Foundation; either version 2
+ * of the License, or (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program; if not, write to the Free Software Foundation,
+ * Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
+ *
+ * The Original Code is Copyright (C) 2008 by Darius Blaszyk.
+ * All rights reserved.
+ *
+ * The Original Code is: all of this file.
+ *
+ * Contributor(s): none yet.
+ *
+ * ***** END GPL LICENSE BLOCK *****
+ */
+ 
+#ifndef DNA_LIBMV_TYPES_H
+#define DNA_LIBMV_TYPES_H
+	
+typedef struct libmvConfig {
+	char pad[2];
+	short flag;
+} libmvConfig;
+
+/* **************** LIBMV ********************* */
+
+/* flag */
+#define LIBMV_BUNDLE_ADJUST	1
+
+#endif

Property changes on: ../../../../source/blender/makesdna/DNA_libmv_types.h
___________________________________________________________________
Name: svn:executable
   + *

Index: ../../../../source/blender/makesdna/DNA_userdef_types.h
===================================================================
--- ../../../../source/blender/makesdna/DNA_userdef_types.h	(revision 15392)
+++ ../../../../source/blender/makesdna/DNA_userdef_types.h	(working copy)
@@ -34,6 +34,7 @@
 
 #include "DNA_listBase.h"
 #include "DNA_texture_types.h"
+#include "DNA_libmv_types.h"
 
 /* themes; defines in BIF_resource.h */
 struct ColorBand;
@@ -198,8 +199,9 @@
 	short smooth_viewtx;	/* miliseconds to spend spinning the view */
 	short glreslimit;
 	short ndof_pan, ndof_rotate;
-	short pads[2];
-//	char pad[8];
+	struct libmvConfig libmv;
+//	short pads[2];
+	char pad[4];
 	char versemaster[160];
 	char verseuser[160];
 	float glalphaclip;
Index: ../../../../source/blender/makesdna/intern/makesdna.c
===================================================================
--- ../../../../source/blender/makesdna/intern/makesdna.c	(revision 15392)
+++ ../../../../source/blender/makesdna/intern/makesdna.c	(working copy)
@@ -126,6 +126,7 @@
 	"DNA_customdata_types.h",
 	"DNA_particle_types.h",
 	"DNA_cloth_types.h",
+	"DNA_libmv_types.h",
 	// if you add files here, please add them at the end
 	// of makesdna.c (this file) as well
 
